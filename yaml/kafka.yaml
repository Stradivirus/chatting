apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: chat
spec:
  serviceName: "kafka"
  replicas: 2
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: init-kafka
        image: busybox
        command: ['sh', '-c', 'mkdir -p /bitnami/kafka/config && chown -R 1001:1001 /bitnami/kafka']
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka
      - name: init-node-id
        image: busybox
        command: ['/bin/sh', '-c']
        args:
          - |
            NODE_NAME=$(echo $POD_NAME | sed 's/.*-//')
            echo $NODE_NAME > /pod-data/node-id
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: pod-data
          mountPath: /pod-data
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        ports:
        - containerPort: 9092
        - containerPort: 9093
        env:
        - name: BITNAMI_DEBUG
          value: "true"
        - name: KAFKA_CFG_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_CFG_NODE_ID_COMMAND
          value: "cat /pod-data/node-id"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka-service:9093,1@kafka-1.kafka-service:9093"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092,CONTROLLER://:9093"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(POD_NAME).kafka-service:9092"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: "abcdefghijklmnopqrstuv"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_ENABLE_KRAFT
          value: "yes"
        volumeMounts:
        - name: pod-data
          mountPath: /pod-data
        - name: kafka-data
          mountPath: /bitnami/kafka
      volumes:
      - name: pod-data
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: chat
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - port: 9092
      name: kafka
    - port: 9093
      name: controller